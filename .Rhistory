# add column with number of wave
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
# combine data sets 'wave1', 'wave2', 'wave3', 'wave4'.
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
subset <- wave1234
subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
# continue with this, make it more informative and prettier
# ggplot(subset, aes(x = wave, y = loudness)) +
#    geom_bar(stat = "summary", fun.y = "mean")
#mean(wave1$loudness)
#mean(wave2$loudness)
#mean(wave3$loudness)
#mean(wave4$loudness)
subset %>%
group_by(wave) %>%
summarise_all(mean) -> hoi
#subset.summary # Summary statistics
# a nice scatterplot of release year X loudness, per wave
plot<- ggplot(subset, aes(x = release_year, y = loudness, color = wave)) +
geom_point(stat = "summary", position = "jitter", alpha=0.7) +
scale_x_continuous("Release year",
limits = c(1980, 2020)) +
scale_y_continuous("Loudness") +
scale_color_discrete("wave") +
geom_point(data = hoi, shape = 15, size = 5)
#plot
ggplotly(plot)
wave1 <- get_playlist_audio_features("", "1rcC4T1SuhqqTLw2j5KBEI")
wave2 <- get_playlist_audio_features("", "0x1XvxGALr0yY7lKos4Kg2")
wave3 <- get_playlist_audio_features("", "0k613TUDZYkomz97xX9DeZ")
wave4 <- get_playlist_audio_features("", "3Mck3Ipp6wNmmRgDfYkRza")
# add column with release year of track
wave1$release_year <- c(1992, 1992, 1983, 1994, 1985, 1985, 1987, 1987, 1995, 1990, 1991, 1991)
wave2$release_year <- c(1994, 1994, 1994, 1998, 1998, 1996, 1999, 1999, 1999, 1998, 1998, 1996, 1997, 1997, 1997, 1997, 1997, 1998, 1997, 1999, 1999, 1999, 1999, 1999, 2000, 2003, 2000, 2000, 1998, 2002, 2000, 1999, 1997, 1997, 1997, 2000, 2000, 1995)
wave3$release_year <- c(1999, 2001, 2001, 2006, 2003, 2003, 2001, 2003, 2002, 2010, 2002, 2002, 2004, 2005, 2001, 2001, 1999, 1999, 2000, 2000, 2005, 2004, 2003, 2001, 2004, 2005, 2005, 2003, 2000, 2004, 2003, 2017, 2008)
wave4$release_year <- c(2014, 2014, 2010, 2018, 2018, 2017, 2017, 2017, 2010, 2015, 2018, 2016, 2014, 2016, 2017, 2018, 2014, 2013, 2013, 2013, 2014, 2012, 2013, 2018 ,2011, 2013, 2012, 2012, 2013, 2018, 2015, 2013, 2016, 2018, 2013, 2015, 2018, 2017, 2014)
# add column with number of wave
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
# combine data sets 'wave1', 'wave2', 'wave3', 'wave4'.
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
subset <- wave1234
subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
# continue with this, make it more informative and prettier
# ggplot(subset, aes(x = wave, y = loudness)) +
#    geom_bar(stat = "summary", fun.y = "mean")
#mean(wave1$loudness)
#mean(wave2$loudness)
#mean(wave3$loudness)
#mean(wave4$loudness)
subset %>%
group_by(wave) %>%
summarise_all(mean) -> hoi
#subset.summary # Summary statistics
# a nice scatterplot of release year X loudness, per wave
ggplot(subset, aes(x = release_year, y = loudness, color = wave)) +
geom_point(stat = "summary", position = "jitter", alpha=0.7) +
scale_x_continuous("Release year",
limits = c(1980, 2020)) +
scale_y_continuous("Loudness") +
scale_color_discrete("wave") +
geom_point(data = hoi, shape = 15, size = 5)
#plot
View(hoi)
library(plotly)
wave1 <- get_playlist_audio_features("", "1rcC4T1SuhqqTLw2j5KBEI")
wave2 <- get_playlist_audio_features("", "0x1XvxGALr0yY7lKos4Kg2")
wave3 <- get_playlist_audio_features("", "0k613TUDZYkomz97xX9DeZ")
wave4 <- get_playlist_audio_features("", "3Mck3Ipp6wNmmRgDfYkRza")
# add column with release year of track
wave1$release_year <- c(1992, 1992, 1983, 1994, 1985, 1985, 1987, 1987, 1995, 1990, 1991, 1991)
wave2$release_year <- c(1994, 1994, 1994, 1998, 1998, 1996, 1999, 1999, 1999, 1998, 1998, 1996, 1997, 1997, 1997, 1997, 1997, 1998, 1997, 1999, 1999, 1999, 1999, 1999, 2000, 2003, 2000, 2000, 1998, 2002, 2000, 1999, 1997, 1997, 1997, 2000, 2000, 1995)
wave3$release_year <- c(1999, 2001, 2001, 2006, 2003, 2003, 2001, 2003, 2002, 2010, 2002, 2002, 2004, 2005, 2001, 2001, 1999, 1999, 2000, 2000, 2005, 2004, 2003, 2001, 2004, 2005, 2005, 2003, 2000, 2004, 2003, 2017, 2008)
wave4$release_year <- c(2014, 2014, 2010, 2018, 2018, 2017, 2017, 2017, 2010, 2015, 2018, 2016, 2014, 2016, 2017, 2018, 2014, 2013, 2013, 2013, 2014, 2012, 2013, 2018 ,2011, 2013, 2012, 2012, 2013, 2018, 2015, 2013, 2016, 2018, 2013, 2015, 2018, 2017, 2014)
# add column with number of wave
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
# combine data sets 'wave1', 'wave2', 'wave3', 'wave4'.
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
wave1234subset <- wave1234
wave1234subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
# continue with this, make it more informative and prettier
# ggplot(wave1234subset, aes(x = wave, y = loudness)) +
#    geom_bar(stat = "summary", fun.y = "mean")
#mean(wave1$loudness)
#mean(wave2$loudness)
#mean(wave3$loudness)
#mean(wave4$loudness)
subset %>%
group_by(wave) %>%
summarise_all(mean) -> wave1234subset_summary
#subset.summary # Summary statistics
# a nice scatterplot of release year X loudness, per wave
scatterpl<- ggplot(wave1234subset, aes(x = release_year, y = loudness, color = wave)) +
geom_point(stat = "summary", position = "jitter", alpha=0.7) +
scale_x_continuous("Release year",
limits = c(1980, 2020)) +
scale_y_continuous("Loudness") +
scale_color_discrete("wave") +
geom_point(data = wave1234subset_summary, shape = 15, size = 5)
#plot
ggplotly(scatterpl)
wave1 <- get_playlist_audio_features("", "1rcC4T1SuhqqTLw2j5KBEI")
wave2 <- get_playlist_audio_features("", "0x1XvxGALr0yY7lKos4Kg2")
wave3 <- get_playlist_audio_features("", "0k613TUDZYkomz97xX9DeZ")
wave4 <- get_playlist_audio_features("", "3Mck3Ipp6wNmmRgDfYkRza")
wave1$release_year <- c(1992, 1992, 1983, 1994, 1985, 1985, 1987, 1987, 1995, 1990, 1991, 1991)
wave2$release_year <- c(1994, 1994, 1994, 1998, 1998, 1996, 1999, 1999, 1999, 1998, 1998, 1996, 1997, 1997, 1997, 1997, 1997, 1998, 1997, 1999, 1999, 1999, 1999, 1999, 2000, 2003, 2000, 2000, 1998, 2002, 2000, 1999, 1997, 1997, 1997, 2000, 2000, 1995)
wave3$release_year <- c(1999, 2001, 2001, 2006, 2003, 2003, 2001, 2003, 2002, 2010, 2002, 2002, 2004, 2005, 2001, 2001, 1999, 1999, 2000, 2000, 2005, 2004, 2003, 2001, 2004, 2005, 2005, 2003, 2000, 2004, 2003, 2017, 2008)
wave4$release_year <- c(2014, 2014, 2010, 2018, 2018, 2017, 2017, 2017, 2010, 2015, 2018, 2016, 2014, 2016, 2017, 2018, 2014, 2013, 2013, 2013, 2014, 2012, 2013, 2018 ,2011, 2013, 2012, 2012, 2013, 2018, 2015, 2013, 2016, 2018, 2013, 2015, 2018, 2017, 2014)
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
wave1234subset <- wave1234
wave1234subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
subset %>%
group_by(wave) %>%
summarise_all(mean) -> wave1234subset_summary
#subset.summary # Summary statistics
ggplot(wave1234subset, aes(x = release_year, y = loudness, color = wave)) +
geom_point(stat = "summary", position = "jitter", alpha=0.7) +
scale_x_continuous("Release year",
limits = c(1980, 2020)) +
scale_y_continuous("Loudness") +
scale_color_discrete("wave") +
geom_point(data = wave1234subset_summary, shape = 15, size = 5)
wave1 <- get_playlist_audio_features("", "1rcC4T1SuhqqTLw2j5KBEI")
wave2 <- get_playlist_audio_features("", "0x1XvxGALr0yY7lKos4Kg2")
wave3 <- get_playlist_audio_features("", "0k613TUDZYkomz97xX9DeZ")
wave4 <- get_playlist_audio_features("", "3Mck3Ipp6wNmmRgDfYkRza")
# add column with release year of track
wave1$release_year <- c(1992, 1992, 1983, 1994, 1985, 1985, 1987, 1987, 1995, 1990, 1991, 1991)
wave2$release_year <- c(1994, 1994, 1994, 1998, 1998, 1996, 1999, 1999, 1999, 1998, 1998, 1996, 1997, 1997, 1997, 1997, 1997, 1998, 1997, 1999, 1999, 1999, 1999, 1999, 2000, 2003, 2000, 2000, 1998, 2002, 2000, 1999, 1997, 1997, 1997, 2000, 2000, 1995)
wave3$release_year <- c(1999, 2001, 2001, 2006, 2003, 2003, 2001, 2003, 2002, 2010, 2002, 2002, 2004, 2005, 2001, 2001, 1999, 1999, 2000, 2000, 2005, 2004, 2003, 2001, 2004, 2005, 2005, 2003, 2000, 2004, 2003, 2017, 2008)
wave4$release_year <- c(2014, 2014, 2010, 2018, 2018, 2017, 2017, 2017, 2010, 2015, 2018, 2016, 2014, 2016, 2017, 2018, 2014, 2013, 2013, 2013, 2014, 2012, 2013, 2018 ,2011, 2013, 2012, 2012, 2013, 2018, 2015, 2013, 2016, 2018, 2013, 2015, 2018, 2017, 2014)
# add column with number of wave
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
# combine data sets 'wave1', 'wave2', 'wave3', 'wave4'.
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
wave1234subset <- wave1234
wave1234subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
# continue with this, make it more informative and prettier
# ggplot(wave1234subset, aes(x = wave, y = loudness)) +
#    geom_bar(stat = "summary", fun.y = "mean")
#mean(wave1$loudness)
#mean(wave2$loudness)
#mean(wave3$loudness)
#mean(wave4$loudness)
subset %>%
group_by(wave) %>%
summarise_all(mean) -> wave1234subset_summary
#subset.summary # Summary statistics
# a nice scatterplot of release year X loudness, per wave
ggplot(wave1234subset, aes(x = release_year, y = loudness, color = wave)) +
geom_point(stat = "summary", position = "jitter", alpha=0.7) +
scale_x_continuous("Release year",
limits = c(1980, 2020)) +
scale_y_continuous("Loudness") +
scale_color_discrete("wave") +
geom_point(data = wave1234subset_summary, shape = 15, size = 5)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(plotly)
library(spotifyr)
library(compmus)
library(remotes)
library(usethis)
library(ggplot2)
wave1 <- get_playlist_audio_features("", "1rcC4T1SuhqqTLw2j5KBEI")
wave2 <- get_playlist_audio_features("", "0x1XvxGALr0yY7lKos4Kg2")
wave3 <- get_playlist_audio_features("", "0k613TUDZYkomz97xX9DeZ")
wave4 <- get_playlist_audio_features("", "3Mck3Ipp6wNmmRgDfYkRza")
# add column with release year of track
wave1$release_year <- c(1992, 1992, 1983, 1994, 1985, 1985, 1987, 1987, 1995, 1990, 1991, 1991)
wave2$release_year <- c(1994, 1994, 1994, 1998, 1998, 1996, 1999, 1999, 1999, 1998, 1998, 1996, 1997, 1997, 1997, 1997, 1997, 1998, 1997, 1999, 1999, 1999, 1999, 1999, 2000, 2003, 2000, 2000, 1998, 2002, 2000, 1999, 1997, 1997, 1997, 2000, 2000, 1995)
wave3$release_year <- c(1999, 2001, 2001, 2006, 2003, 2003, 2001, 2003, 2002, 2010, 2002, 2002, 2004, 2005, 2001, 2001, 1999, 1999, 2000, 2000, 2005, 2004, 2003, 2001, 2004, 2005, 2005, 2003, 2000, 2004, 2003, 2017, 2008)
wave4$release_year <- c(2014, 2014, 2010, 2018, 2018, 2017, 2017, 2017, 2010, 2015, 2018, 2016, 2014, 2016, 2017, 2018, 2014, 2013, 2013, 2013, 2014, 2012, 2013, 2018 ,2011, 2013, 2012, 2012, 2013, 2018, 2015, 2013, 2016, 2018, 2013, 2015, 2018, 2017, 2014)
# add column with number of wave
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
# combine data sets 'wave1', 'wave2', 'wave3', 'wave4'.
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
wave1234subset <- wave1234
wave1234subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
# continue with this, make it more informative and prettier
# ggplot(wave1234subset, aes(x = wave, y = loudness)) +
#    geom_bar(stat = "summary", fun.y = "mean")
#mean(wave1$loudness)
#mean(wave2$loudness)
#mean(wave3$loudness)
#mean(wave4$loudness)
subset %>%
group_by(wave) %>%
summarise_all(mean) -> wave1234subset_summary
wave1 <- get_playlist_audio_features("", "1rcC4T1SuhqqTLw2j5KBEI")
wave2 <- get_playlist_audio_features("", "0x1XvxGALr0yY7lKos4Kg2")
wave3 <- get_playlist_audio_features("", "0k613TUDZYkomz97xX9DeZ")
wave4 <- get_playlist_audio_features("", "3Mck3Ipp6wNmmRgDfYkRza")
# add column with release year of track
wave1$release_year <- c(1992, 1992, 1983, 1994, 1985, 1985, 1987, 1987, 1995, 1990, 1991, 1991)
wave2$release_year <- c(1994, 1994, 1994, 1998, 1998, 1996, 1999, 1999, 1999, 1998, 1998, 1996, 1997, 1997, 1997, 1997, 1997, 1998, 1997, 1999, 1999, 1999, 1999, 1999, 2000, 2003, 2000, 2000, 1998, 2002, 2000, 1999, 1997, 1997, 1997, 2000, 2000, 1995)
wave3$release_year <- c(1999, 2001, 2001, 2006, 2003, 2003, 2001, 2003, 2002, 2010, 2002, 2002, 2004, 2005, 2001, 2001, 1999, 1999, 2000, 2000, 2005, 2004, 2003, 2001, 2004, 2005, 2005, 2003, 2000, 2004, 2003, 2017, 2008)
wave4$release_year <- c(2014, 2014, 2010, 2018, 2018, 2017, 2017, 2017, 2010, 2015, 2018, 2016, 2014, 2016, 2017, 2018, 2014, 2013, 2013, 2013, 2014, 2012, 2013, 2018 ,2011, 2013, 2012, 2012, 2013, 2018, 2015, 2013, 2016, 2018, 2013, 2015, 2018, 2017, 2014)
# add column with number of wave
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
# combine data sets 'wave1', 'wave2', 'wave3', 'wave4'.
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
wave1234subset <- wave1234
wave1234subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
# continue with this, make it more informative and prettier
# ggplot(wave1234subset, aes(x = wave, y = loudness)) +
#    geom_bar(stat = "summary", fun.y = "mean")
#mean(wave1$loudness)
#mean(wave2$loudness)
#mean(wave3$loudness)
#mean(wave4$loudness)
wave1234subset %>%
group_by(wave) %>%
summarise_all(mean) -> wave1234subset_summary
#subset.summary # Summary statistics
# a nice scatterplot of release year X loudness, per wave
ggplot(wave1234subset, aes(x = release_year, y = loudness, color = wave)) +
geom_point(stat = "summary", position = "jitter", alpha=0.7) +
scale_x_continuous("Release year",
limits = c(1980, 2020)) +
scale_y_continuous("Loudness") +
scale_color_discrete("wave") +
geom_point(data = wave1234subset_summary, shape = 15, size = 5)
library(knitr)
install.packages("png")
install.packages("jpeg")
library(knitr)
library(jpeg)
library(png)
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(plotly)
library(spotifyr)
library(compmus)
library(remotes)
library(usethis)
library(ggplot2)
library(knitr)
library(jpeg)
library(png)
![a caption](imagescompmus/ritesofspring.png)
knitr::include_graphics("imagescompmus/ritesofspring.png")
getwd()
knitr::include_graphics("imagescompmus/ritesofspring.jpg")
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
library(plotly)
library(spotifyr)
library(compmus)
library(remotes)
library(usethis)
library(ggplot2)
library(knitr)
library(jpeg)
library(png)
# Konstantine by Something Corporate
Konstantine <-
get_tidy_audio_analysis("75CsNDa4ikKu3TyBHMELoM") %>%
select(segments) %>%
unnest(segments) %>%
select(start, duration, pitches)
Konstantine %>%
mutate(pitches = map(pitches, compmus_normalise, "euclidean")) %>%
compmus_gather_chroma() %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = pitch_class,
fill = value
)
) +
geom_tile() +
labs(x = "Time (s)", y = NULL, fill = "Magnitude") +
theme_minimal() +
scale_fill_viridis_c()
# For Want Of by Rites of Spring
RitesOfSpring <-
get_tidy_audio_analysis("7mZjpi86XWnEBiu8VMR3GI") %>%
select(segments) %>%
unnest(segments) %>%
select(start, duration, pitches)
# Cutting My Fingers Off by Turnover
Turnover <-
get_tidy_audio_analysis("4lRUr1HeCWtCwyHCIfIqTt") %>%
select(segments) %>%
unnest(segments) %>%
select(start, duration, pitches)
compmus_long_distance(
RitesOfSpring %>% mutate(pitches = map(pitches, compmus_normalise, "chebyshev")),
Turnover %>% mutate(pitches = map(pitches, compmus_normalise, "chebyshev")),
feature = pitches,
method = "euclidean"
) %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_equal() +
labs(x = "'For Want Of' by Rites of Spring", y = "'Cutting My Fingers Off' by Turnover") +
theme_minimal() +
scale_fill_viridis_c(guide = NULL)
NeverMeant <-
get_tidy_audio_analysis("51R5mPcJjOnfv9lKY1u5sW") %>% # Change URI.
compmus_align(bars, segments) %>%                     # Change `bars`
select(bars) %>%                                      #   in all three
unnest(bars) %>%                                      #   of these lines.
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
) %>%
mutate(
timbre =
map(segments,
compmus_summarise, timbre,
method = "rms", norm = "euclidean"              # Change summary & norm.
)
)
NeverMeant %>%
compmus_gather_timbre() %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = basis,
fill = value
)
) +
geom_tile() +
labs(x = "Time (s)", y = NULL, fill = "Magnitude") +
scale_fill_viridis_c() +
theme_classic()
NeverMeant %>%
compmus_self_similarity(timbre, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
NeverMeant %>%
compmus_self_similarity(pitches, "cosine") %>%
ggplot(
aes(
x = xstart + xduration / 2,
width = xduration,
y = ystart + yduration / 2,
height = yduration,
fill = d
)
) +
geom_tile() +
coord_fixed() +
scale_fill_viridis_c(guide = "none") +
theme_classic() +
labs(x = "", y = "")
# fig.cap="Rites of Sping, by many seen as the 'first' emo band. Photograph: Bert Queiroz", out.width = '60%'}
# knitr::include_graphics("imagescompmus/ros.jpeg")
# Playlist 'Emo: the first wave'
# <iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/1rcC4T1SuhqqTLw2j5KBEI?utm_source=generator&theme=0" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"></iframe>
#Playlist 'Emo: the second wave'
#<iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/0x1XvxGALr0yY7lKos4Kg2?utm_source=generator&theme=0" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"></iframe>
#Playlist 'Emo: the third wave'
#<iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/0k613TUDZYkomz97xX9DeZ?utm_source=generator&theme=0" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"></iframe>
#Playlist 'Emo: the fourth wave'
#<iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/3Mck3Ipp6wNmmRgDfYkRza?utm_source=generator&theme=0" width="100%" height="380" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"></iframe>
wave1 <- get_playlist_audio_features("", "1rcC4T1SuhqqTLw2j5KBEI")
wave2 <- get_playlist_audio_features("", "0x1XvxGALr0yY7lKos4Kg2")
wave3 <- get_playlist_audio_features("", "0k613TUDZYkomz97xX9DeZ")
wave4 <- get_playlist_audio_features("", "3Mck3Ipp6wNmmRgDfYkRza")
# add column with release year of track
wave1$release_year <- c(1992, 1992, 1983, 1994, 1985, 1985, 1987, 1987, 1995, 1990, 1991, 1991)
wave2$release_year <- c(1994, 1994, 1994, 1998, 1998, 1996, 1999, 1999, 1999, 1998, 1998, 1996, 1997, 1997, 1997, 1997, 1997, 1998, 1997, 1999, 1999, 1999, 1999, 1999, 2000, 2003, 2000, 2000, 1998, 2002, 2000, 1999, 1997, 1997, 1997, 2000, 2000, 1995)
wave3$release_year <- c(1999, 2001, 2001, 2006, 2003, 2003, 2001, 2003, 2002, 2010, 2002, 2002, 2004, 2005, 2001, 2001, 1999, 1999, 2000, 2000, 2005, 2004, 2003, 2001, 2004, 2005, 2005, 2003, 2000, 2004, 2003, 2017, 2008)
wave4$release_year <- c(2014, 2014, 2010, 2018, 2018, 2017, 2017, 2017, 2010, 2015, 2018, 2016, 2014, 2016, 2017, 2018, 2014, 2013, 2013, 2013, 2014, 2012, 2013, 2018 ,2011, 2013, 2012, 2012, 2013, 2018, 2015, 2013, 2016, 2018, 2013, 2015, 2018, 2017, 2014)
# add column with number of wave
wave1$wave <- "wave1"
wave2$wave <- "wave2"
wave3$wave <- "wave3"
wave4$wave <- "wave4"
# combine data sets 'wave1', 'wave2', 'wave3', 'wave4'.
wave1234 <- rbind(wave1, wave2, wave3, wave4)
# remove useless columns
wave1234subset <- wave1234
wave1234subset[ ,c(1,2,3,4,5,20,21,22,23,24,25,26,27,30,32,35,39,41,43,51,52,53,58)] <- list(NULL)
# continue with this, make it more informative and prettier
# ggplot(wave1234subset, aes(x = wave, y = loudness)) +
#    geom_bar(stat = "summary", fun.y = "mean")
#mean(wave1$loudness)
#mean(wave2$loudness)
#mean(wave3$loudness)
#mean(wave4$loudness)
wave1234subset %>%
group_by(wave) %>%
summarise_all(mean) -> wave1234subset_summary
#subset.summary # Summary statistics
# a nice scatterplot of release year X loudness, per wave
ggplot(wave1234subset, aes(x = release_year, y = loudness, color = wave)) +
geom_point(stat = "summary", position = "jitter", alpha=0.7) +
scale_x_continuous("Release year",
limits = c(1980, 2020)) +
scale_y_continuous("Loudness") +
scale_color_discrete("wave") +
geom_point(data = wave1234subset_summary, shape = 15, size = 5)
emowave1 <-
get_playlist_audio_features(
"Emo: the first wave",
"1rcC4T1SuhqqTLw2j5KBEI"
) %>%
slice(1:40) %>%
add_audio_analysis()
emowave2 <-
get_playlist_audio_features(
"Emo: the second wave",
"0x1XvxGALr0yY7lKos4Kg2"
) %>%
slice(1:40) %>%
add_audio_analysis()
emowave3 <-
get_playlist_audio_features(
"Emo: the third wave",
"0k613TUDZYkomz97xX9DeZ"
) %>%
slice(1:40) %>%
add_audio_analysis()
emowave4 <-
get_playlist_audio_features(
"Emo: the fourth wave",
"3Mck3Ipp6wNmmRgDfYkRza"
) %>%
slice(1:40) %>%
add_audio_analysis()
wavescombi <-
emowave1 %>%
mutate(Wave = "wave 1") %>%
bind_rows(emowave2 %>% mutate(Wave = "wave 2"),emowave3 %>% mutate(Wave = "wave 3"), emowave4 %>% mutate(Wave = "wave 4"))
wavescombi %>%
mutate(
sections =
map(
sections,                                    # sections or segments
summarise_at,
vars(tempo, loudness, duration),             # features of interest
list(section_mean = mean, section_sd = sd)   # aggregation functions
)
) %>%
unnest(sections) %>%
ggplot(
aes(
x = tempo,
y = tempo_section_sd,
colour = Wave,
alpha = loudness
)
) +
geom_point(aes(size = duration / 60)) +
geom_rug() +
theme_minimal() +
ylim(0, 5) +
labs(
x = "Mean Tempo (bpm)",
y = "SD Tempo",
colour = "Wave",
size = "Duration (min)",
alpha = "Volume (dBFS)"
)
